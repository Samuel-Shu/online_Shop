syntax = "proto3";
option go_package = ".;proto";

service Goods{
  //商品接口
  rpc GoodsList (GoodsFilterRequest) returns (GoodsListResponse);
  //用户提交订单有多个商品，需批量查询商品信息
  rpc BatchGetGoods (BatchGoodsInfo) returns (GoodsListResponse); //批量获取商品信息
  rpc CreateGoods (CreateGoodsInfo) returns (GoodsInfoResponse);
  rpc DeleteGoods (DeleteGoodsInfo) returns (MyEmpty);
  rpc UpdateGoods (CreateGoodsInfo) returns (MyEmpty);
  rpc GetGoodsDetail (GoodInfoRequest) returns (GoodsInfoResponse);

  //商品分类
  rpc GetAllCategoryList (MyEmpty) returns (CategoryListResponse);
  //获取子分类
  rpc GetSubCategory (CategoryListRequest) returns (SubCategoryListResponse);
  rpc CreateCategory (CategoryInfoRequest) returns (CategoryInfoResponse);
  rpc UpdateCategory (CategoryInfoRequest) returns (MyEmpty);
  rpc DeleteCategory (DeleteCategoryRequest) returns (MyEmpty);

  //品牌和轮播图
  rpc BrandList (BrandFilterRequest) returns (BrandListResponse); //批量获取品牌信息
  rpc CreateBrand (BrandRequest) returns (BrandInfoResponse);//新建品牌信息
  rpc DeleteBrand (BrandRequest) returns (MyEmpty);//删除品牌信息
  rpc UpdateBrand (BrandRequest) returns (MyEmpty);//更新品牌信息

  //轮播图
  rpc BannerList (MyEmpty) returns (BannerListResponse); //获取轮播列表信息
  rpc CreateBanner (BannerRequest) returns (BannerResponse);//添加banner图
  rpc DeleteBanner (BannerRequest) returns (MyEmpty);//删除
  rpc UpdateBanner (BannerRequest) returns (MyEmpty);//更新

  //品牌分类
  rpc CategoryBrandList (CategoryBrandFilterRequest) returns (CategoryBrandListResponse);
  //通过category获取brands
  rpc GetCategoryBrandList (CategoryInfoRequest) returns (BrandListResponse);
  rpc CreateCategoryBrand (CategoryBrandRequest) returns (CategoryBrandResponse);
  rpc DeleteCategoryBrand (CategoryBrandRequest) returns (MyEmpty);
  rpc UpdateCategoryBrand (CategoryBrandRequest) returns (MyEmpty);
}

message MyEmpty {
}

message BrandFilterRequest {
  int32 pages = 1;
  int32 pagePerNums = 2;
}

message CategoryBrandFilterRequest {
  int32 pages = 1;
  int32 pagePerNum = 2;
}
message CategoryBrandListResponse {
  int32 total = 1;
  repeated CategoryBrandResponse data = 2;
}

message CategoryBrandRequest {
  int32 id = 1;
  int32 categoryId = 2;
  int32 brandId = 3;
}

message CategoryBrandResponse {
  int32 id = 1;
  BrandInfoResponse brand = 2;
  CategoryInfoResponse category = 3;
}

message BannerListResponse {
  int32 total = 1;
  repeated BannerResponse data = 2;
}

message BannerRequest {
  int32 id = 1;
  int32 index = 2;
  string image = 3;
  string url = 4;
}


message BannerResponse {
  int32 id = 1;
  int32 index = 2;
  string image = 3;
  string url = 4;
}

message CategoryInfoRequest {
  int32 id = 1;
  string name = 2;
  int32 parentCategory = 3;
  int32 level = 4;
  bool isTab = 5;
}

message BrandRequest {
  int32 id = 1;
  string name = 2;
  string logo = 3;
}

message BrandListResponse {
  int32 total = 1;
  repeated BrandInfoResponse data = 2;
}

message CategoryListRequest {
  int32 id = 1;
  int32 level = 2;
}

message CategoryBriefInfoResponse {
  int32 id = 1;
  string name = 2;
}

message SubCategoryListResponse {
  int32 total = 1;
  CategoryInfoResponse info = 2;
  repeated CategoryInfoResponse subCategorys = 3;
}

message CategoryInfoResponse {
  int32 id = 1;
  string name = 2;
  int32 parentCategory = 3;
  int32 level = 4;
  bool isTab = 5;
}

message CategoryListResponse {
  int32 total = 1;
  repeated CategoryInfoResponse data = 2;
  string jsonData = 3;
}

message BrandInfoResponse {
  int32 id = 1;
  string name = 2;
  string logo = 3;
}

message BatchGoodsInfo {
  repeated int32 id = 1;
}

message GoodsInfoResponse {
  int32 id = 1;
  int32 categoryId = 2;
  string name = 3;
  string goodsSn = 4;
  int32 clickNum =5;
  int32 soldNum = 6;
  int32 favNum = 7;
  float marketPrice = 8;
  float shopPrice = 9;
  string goodsBrief = 10;
  string goodsDesc = 11;
  bool shipFree = 12;
  repeated string images = 13;
  repeated string descImages = 14;
  string goodsFrontImage = 15;
  bool isNew = 16;
  bool isHot = 17;
  bool onSale = 18;
  int64 addTime =19;
  CategoryBriefInfoResponse category = 20;
  BrandInfoResponse brand = 21;
}

message GoodsFilterRequest {
  int32 PriceMin = 1;
  int32 PriceMax = 2;
  bool isHot = 3;
  bool isNew = 4;
  bool isTab = 5;
  int32 topCategory =6;
  int32 pages = 7;
  int32 pagePerNums = 8;
  string keyWords = 9;
  int32 brand = 10;
}

message GoodsListResponse {
  int32 total = 1;
  repeated GoodsInfoResponse data = 2;
}

message CreateGoodsInfo {
  int32 id = 1;
  string name = 3;
  string goodsSn = 4;
  int32 stocks = 7;
  float marketPrice = 8;
  float shopPrice = 9;
  string goodsBrief = 10;
  string goodsDesc = 11;
  bool shipFree = 12;
  repeated string images = 13;
  repeated string descImages = 14;
  string goodsFrontImage = 15;
  bool isNew = 16;
  bool isHot = 17;
  bool onSale = 18;
  uint32 categoryId = 19;
  uint32 brandId = 20;
}

message DeleteGoodsInfo {
  int32 id = 1;
}

message GoodInfoRequest {
  int32 id = 1;
}

message DeleteCategoryRequest {
  int32 id = 1;
}
